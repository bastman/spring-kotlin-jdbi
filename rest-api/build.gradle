version '0.0.1'



buildscript {
    ext {
        kotlin_version = '1.2.21'
        kotlinLoggingVersion = '1.4.6'
        logstashLogbackEncoderVersion='4.8'
        springBootVersion ='1.5.7.RELEASE'
        jacksonVersion = '2.9.2'
        swaggerVersion = '2.8.0'
        mockitoVersion = '2.8.47'
        postgresDriverVersion = '42.1.4'
        jdbiVersion = '2.72'
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlin_version}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlin_version}")
        classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlin_version}")

        classpath "org.postgresql:postgresql:${postgresDriverVersion}"
    }
}



apply plugin: "kotlin"
apply plugin: "kotlin-spring"
apply plugin: "kotlin-noarg"
apply plugin: "org.springframework.boot"


apply plugin: 'kotlin-jpa'
apply plugin: 'kotlin-kapt'
apply plugin: 'idea'

idea {
    module {
        def kaptMain = file('build/generated/source/kapt/main')
        sourceDirs += kaptMain
        generatedSourceDirs += kaptMain
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

dependencies {
    // kotlin
    compile("org.jetbrains.kotlin:kotlin-stdlib-jre8")
    compile("org.jetbrains.kotlin:kotlin-reflect")
    // logging
    compile "net.logstash.logback:logstash-logback-encoder:$logstashLogbackEncoderVersion"
    compile "io.github.microutils:kotlin-logging:$kotlinLoggingVersion"
    // spring

    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile "org.springframework.boot:spring-boot-starter-jdbc"
    // jackson json
    compile "com.fasterxml.jackson.module:jackson-modules-java8:$jacksonVersion"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion"
    compile "com.fasterxml.jackson.module:jackson-module-parameter-names:$jacksonVersion"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:$jacksonVersion"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion"
    // swagger
    compile "io.springfox:springfox-swagger2:$swaggerVersion"
    compile "io.springfox:springfox-swagger-ui:$swaggerVersion"

    // jsr305 - does it ???? NO :(
    compile group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'


    // postgres
    compile "org.postgresql:postgresql:${postgresDriverVersion}"

    // jdbi
    //compile "org.jdbi:jdbi:${jdbiVersion}"


    // https://mvnrepository.com/artifact/org.jdbi/jdbi3-spring
    compile group: 'org.jdbi', name: 'jdbi3-spring', version: '3.0.0-alpha7'
// https://mvnrepository.com/artifact/org.jdbi/jdbi3-jpa
    compile group: 'org.jdbi', name: 'jdbi3-jpa', version: '3.0.1'
// https://mvnrepository.com/artifact/org.jdbi/jdbi3-postgres
    compile group: 'org.jdbi', name: 'jdbi3-postgres', version: '3.0.1'
// https://mvnrepository.com/artifact/org.jdbi/jdbi3-kotlin
    compile group: 'org.jdbi', name: 'jdbi3-kotlin', version: '3.0.1'
// https://mvnrepository.com/artifact/org.jdbi/jdbi3-kotlin-sqlobject
    compile group: 'org.jdbi', name: 'jdbi3-kotlin-sqlobject', version: '3.0.1'

}

test {
    testLogging {
        events "failed"
        exceptionFormat "full"
    }
}



